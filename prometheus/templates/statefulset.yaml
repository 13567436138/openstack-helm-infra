{{/*
Copyright 2017 The Openstack-Helm Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- if .Values.manifests.statefulset_prometheus }}
{{- $envAll := . }}
{{- if .Values.images.local_registry.active -}}
{{- $_ := set .Values "pod_dependency" (merge .Values.dependencies.prometheus .Values.conditional_dependencies.local_image_registry) -}}
{{- else -}}
{{- $_ := set .Values "pod_dependency" .Values.dependencies.prometheus -}}
{{- end -}}
{{- $mounts_prometheus := .Values.pod.mounts.prometheus.prometheus }}
{{- $mounts_prometheus_init := .Values.pod.mounts.prometheus.init_container }}
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: prometheus
spec:
  serviceName: {{ tuple "monitoring" "internal" . | include "helm-toolkit.endpoints.hostname_short_endpoint_lookup" }}
  replicas: {{ .Values.pod.replicas.prometheus }}
  template:
    metadata:
      labels:
{{ tuple $envAll "prometheus" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
        configmap-rules-hash: {{ tuple "configmap-rules.yaml" . | include "helm-toolkit.utils.hash" }}
    spec:
      serviceAccount: prometheus
      affinity:
{{ tuple $envAll "prometheus" "api" | include "helm-toolkit.snippets.kubernetes_pod_anti_affinity" | indent 8 }}
      nodeSelector:
        {{ .Values.labels.node_selector_key }}: {{ .Values.labels.node_selector_value }}
      terminationGracePeriodSeconds: {{ .Values.pod.lifecycle.termination_grace_period.prometheus.timeout | default "30" }}
      initContainers:
{{ tuple $envAll .Values.pod_dependency list | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
      containers:
        - name: prometheus
{{ tuple $envAll "prometheus" | include "helm-toolkit.snippets.image" | indent 10 }}
          command:
            - /tmp/prometheus.sh
            - start
          lifecycle:
            preStop:
              exec:
                command:
                  - /tmp/prometheus.sh
                  - stop
{{ tuple $envAll $envAll.Values.pod.resources.prometheus | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          ports:
            - name: prom-metrics
              containerPort: {{ .Values.network.prometheus.port }}
          readinessProbe:
            httpGet:
              path: /status
              port: {{ .Values.network.prometheus.port }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - name: etcprometheus
              mountPath: /etc/config
            - name: rulesprometheus
              mountPath: /etc/config/rules
            - name: prometheus-rules
              mountPath: /etc/config/rules/alertmanager.rules
              subPath: alertmanager.rules
              readOnly: true
            - name: prometheus-rules
              mountPath: /etc/config/rules/etcd3.rules
              subPath: etcd3.rules
              readOnly: true
            - name: prometheus-rules
              mountPath: /etc/config/rules/kubernetes.rules
              subPath: kubernetes.rules
              readOnly: true
            - name: prometheus-rules
              mountPath: /etc/config/rules/kube-apiserver.rules
              subPath: kube-apiserver.rules
              readOnly: true
            - name: prometheus-rules
              mountPath: /etc/config/rules/kube-controller-manager.rules
              subPath: kube-controller-manager.rules
              readOnly: true
            - name: prometheus-rules
              mountPath: /etc/config/rules/kubelet.rules
              subPath: kubelet.rules
              readOnly: true
            - name: prometheus-rules
              mountPath: /etc/config/rules/rabbitmq.rules
              subPath: rabbitmq.rules
              readOnly: true
            - name: prometheus-rules
              mountPath: /etc/config/rules/mysql.rules
              subPath: mysql.rules
              readOnly: true
            - name: prometheus-rules
              mountPath: /etc/config/rules/ceph.rules
              subPath: ceph.rules
              readOnly: true
            - name: prometheus-rules
              mountPath: /etc/config/rules/openstack.rules
              subPath: openstack.rules
              readOnly: true
            - name: prometheus-rules
              mountPath: /etc/config/rules/custom.rules
              subPath: custom.rules
              readOnly: true
            - name: prometheus-etc
              mountPath: /etc/config/prometheus.yml
              subPath: prometheus.yml
              readOnly: true
            - name: prometheus-bin
              mountPath: /tmp/prometheus.sh
              subPath: prometheus.sh
              readOnly: true
            - name: storage
              mountPath: /var/lib/prometheus/data
{{ if $mounts_prometheus.volumeMounts }}{{ toYaml $mounts_prometheus.volumeMounts | indent 12 }}{{ end }}
      volumes:
{{ tuple . | include "helm-toolkit.snippets.kubernetes_entrypoint_secret_mount" | indent 8 }}
        - name: etcprometheus
          emptyDir: {}
        - name: rulesprometheus
          emptyDir: {}
        - name: prometheus-rules
          configMap:
            name: prometheus-rules
        - name: prometheus-etc
          configMap:
            name: prometheus-etc
        - name: prometheus-bin
          configMap:
            name: prometheus-bin
            defaultMode: 0555
        {{- if .Values.storage.enabled }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.storage.pvc.name }}
        {{- else }}
        - name: storage
          emptyDir: {}
        {{- end }}
{{ if $mounts_prometheus.volumes }}{{ toYaml $mounts_prometheus.volumes | indent 8 }}{{ end }}
{{- end }}
