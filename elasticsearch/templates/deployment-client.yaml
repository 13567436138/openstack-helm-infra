{{/*
Copyright 2017 The Openstack-Helm Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- if .Values.manifests.deployment_client }}
{{- $envAll := . }}
{{- if .Values.images.local_registry.active -}}
{{- $_ := set .Values "pod_dependency" (merge .Values.dependencies.elasticsearch_client .Values.conditional_dependencies.local_image_registry) -}}
{{- else -}}
{{- $_ := set .Values "pod_dependency" .Values.dependencies.elasticsearch_client -}}
{{- end -}}

{{- $mounts_elasticsearch := .Values.pod.mounts.elasticsearch.elasticsearch }}

{{- $serviceAccountName := "elasticsearch-client"}}
{{ tuple $envAll $envAll.Values.pod_dependency $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elasticsearch-client
spec:
  replicas: {{ .Values.pod.replicas.client }}
{{ tuple $envAll | include "helm-toolkit.snippets.kubernetes_upgrades_deployment" | indent 2 }}
  template:
    metadata:
      labels:
{{ tuple $envAll "elasticsearch" "client" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
    spec:
      serviceAccountName: {{ $serviceAccountName }}
      affinity:
{{ tuple $envAll "elasticsearch" "client" | include "helm-toolkit.snippets.kubernetes_pod_anti_affinity" | indent 8 }}
      terminationGracePeriodSeconds: {{ .Values.pod.lifecycle.termination_grace_period.client.timeout | default "600" }}
      initContainers:
{{ tuple $envAll .Values.pod_dependency list | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
        - name: memory-map-increase
          securityContext:
            privileged: true
            runAsUser: 0
{{ tuple $envAll "memory_init" | include "helm-toolkit.snippets.image" | indent 10 }}
          command:
          - sysctl
          - -w
          - vm.max_map_count={{ .Values.conf.init.max_map_count }}
      containers:
        - name: elasticsearch-client
          securityContext:
            privileged: true
            capabilities:
              add:
                - IPC_LOCK
                - SYS_RESOURCE
{{ tuple $envAll "elasticsearch" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.client | include "helm-toolkit.snippets.kubernetes_resources" | indent 8 }}
          command:
            - /tmp/elasticsearch.sh
            - start
          lifecycle:
            preStop:
              exec:
                command:
                  - /tmp/elasticsearch.sh
                  - stop
          ports:
            - name: http
              containerPort: {{ .Values.network.client.port }}
            - name: transport
              containerPort: {{ .Values.network.discovery.port }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.network.discovery.port }}
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /_cluster/health
              port: {{ .Values.network.client.port }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_MASTER
              value: "false"
            - name: NODE_DATA
              value: "false"
            - name: HTTP_ENABLE
              value: "true"
            - name: DISCOVERY_SERVICE
              value: {{ tuple "elasticsearch" "discovery" $envAll | include "helm-toolkit.endpoints.hostname_short_endpoint_lookup" }}
            - name: ES_JAVA_OPTS
              value: "{{ .Values.conf.elasticsearch.env.java_opts }}"
          volumeMounts:
            - name: elasticsearch-logs
              mountPath: {{ .Values.conf.elasticsearch.config.path.logs }}
            - name: elasticsearch-bin
              mountPath: /tmp/elasticsearch.sh
              subPath: elasticsearch.sh
              readOnly: true
            - name: elasticsearch-config
              mountPath: /usr/share/elasticsearch/config
            - name: elasticsearch-etc
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
              readOnly: true
            - name: elasticsearch-etc
              mountPath: /usr/share/elasticsearch/config/log4j2.properties
              subPath: log4j2.properties
              readOnly: true
            - name: storage
              mountPath: {{ .Values.conf.elasticsearch.config.path.data }}
            {{ if .Values.storage.filesystem_repository.enabled }}
            - name: snapshots
              mountPath: {{ .Values.conf.elasticsearch.config.path.repo }}
            {{ end }}
{{ if $mounts_elasticsearch.volumeMounts }}{{ toYaml $mounts_elasticsearch.volumeMounts | indent 12 }}{{ end }}
      volumes:
        - name: elasticsearch-logs
          emptyDir: {}
        - name: elasticsearch-bin
          configMap:
            name: elasticsearch-bin
            defaultMode: 0555
        - name: elasticsearch-config
          emptyDir: {}
        - name: elasticsearch-etc
          configMap:
            name: elasticsearch-etc
            defaultMode: 0444
        - name: storage
          emptyDir: {}
        {{ if .Values.storage.filesystem_repository.enabled }}
        - name: snapshots
          persistentVolumeClaim:
            claimName: {{ .Values.storage.filesystem_repository.pvc.name }}
        {{ end }}
{{ if $mounts_elasticsearch.volumes }}{{ toYaml $mounts_elasticsearch.volumes | indent 8 }}{{ end }}
{{- end }}
