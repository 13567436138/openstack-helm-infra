# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather pod container logs common block
  vars:
    pod: null

  block:
    - name: "Gather list of init containers in {{ pod }} pod in {{ namespace }} namespace"
      shell: |-
              set -e
              kubectl get pod {{ pod }} -n {{ namespace }} -o json | jq -r '.spec.initContainers[].name'
      args:
        executable: /bin/bash
      register: init_container_names
      ignore_errors: True

    - name: "Gather logs from all init containers in pod {{ pod }}"
      shell: |-
              set -e
              kubectl logs {{ pod }} -n {{ namespace }} -c {{ init_container }} >> {{ logs_dir }}/pod-logs/{{ namespace }}-{{ pod }}-{{ init_container }}.txt
      args:
        executable: /bin/bash
      loop_control:
        loop_var: init_container
      with_items: "{{ init_container_names.stdout_lines }}"
      ignore_errors: True

    - name: "Gather list of containers in {{ pod }} pod in {{ namespace }} namespace"
      shell: |-
              set -e
              kubectl get pod {{ pod }} -n {{ namespace }} -o json | jq -r '.spec.containers[].name'
      args:
        executable: /bin/bash
      register: container_names
      ignore_errors: True

    - name: "Gather logs from all containers in pod {{ pod }}"
      shell: |-
              set -e
              kubectl logs {{ pod }} -n {{ namespace }} -c {{ container }} >> {{ logs_dir }}/pod-logs/{{ namespace }}-{{ pod }}-{{ container }}.txt
      args:
        executable: /bin/bash
      loop_control:
        loop_var: container
      with_items: "{{ container_names.stdout_lines }}"
      ignore_errors: True
